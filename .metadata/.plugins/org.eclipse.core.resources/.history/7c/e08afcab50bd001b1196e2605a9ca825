package com.assignment.accounts.repos;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

import com.assignment.accounts.dao.AccountsDAO;
import com.assignment.accounts.dao.StatementsDAO;

@Repository
public class StatementsRepoImpl implements StatementsRepo {

	@Autowired
	private JdbcTemplate jdbcTemplate;

	@Override
	public List<Map<String, Object>> getAllStatements() {
		// TODO Auto-generated method stub
		return jdbcTemplate.queryForList("Select * from statement");
	}

	@Override
	public List<StatementsDAO> getAllStatementsByAccountId(Long id) {
		// TODO Auto-generated method stub
		try {
			List<StatementsDAO> statements = this.jdbcTemplate.query(
					String.format("SELECT * FROM statement WHERE account_id = (%s)", id),
					new RowMapper<StatementsDAO>() {
						public StatementsDAO mapRow(ResultSet rs, int rowNum) throws SQLException {
							StatementsDAO statement = new StatementsDAO();
							statement.setId(rs.getLong("id"));
							statement.setAccount_id(rs.getLong("account_id"));
							statement.setDatefield(rs.getString("datefield"));
							statement.setAmount(rs.getBigDecimal("amount"));
							return statement;
						}
					});
			return statements;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@Override
	public List<StatementsDAO> getThreeMonthStatements(Long id, String endDate) {
		try {
			List<StatementsDAO> statements = this.jdbcTemplate.query(String.format(
					//"SELECT * FROM statement WHERE account_id = (%s) and DateValue(datefield) >= DateAdd(\"m\", -3, DateValue(\"%s\"))",
					"SELECT * FROM statement WHERE account_id = (%s) and DateValue(datefield) <= DateAdd(\"m\", -3, DateValue(\"18.06.2019\"))",
					id/*, endDate*/), new RowMapper<StatementsDAO>() {
						public StatementsDAO mapRow(ResultSet rs, int rowNum) throws SQLException {
							StatementsDAO statement = new StatementsDAO();
							statement.setId(rs.getLong("id"));
							statement.setAccount_id(rs.getLong("account_id"));
							statement.setDatefield(rs.getString("datefield"));
							statement.setAmount(rs.getBigDecimal("amount"));
							return statement;
						}
					});
			return statements;
		} catch (Exception e) {
			e.printStackTrace();
			return null;
		}
	}

	@Override
	public String getMaxTransactionDate(Long id) {
		return jdbcTemplate.queryForObject(String.format("Select max(datefield) from statement WHERE account_id = (%s)",id),String.class);
	}

}
